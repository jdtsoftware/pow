<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Shopping Cart - Basket</title>
    <script src="https://code.jquery.com/jquery-2.2.4.js" charset="utf-8"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
    <script src="https://js.stripe.com/v3/"></script>

    <style>
        @import url(https://fonts.googleapis.com/css?family=Roboto:300,400,500);

        * {
            box-sizing: border-box;
        }

        html,
        body {
            width: 100%;
            height: 100%;
            padding: 10px;
            margin: 0;
            background-color: #7EC855;
            font-family: 'Roboto', sans-serif;
        }

        .shopping-cart {
            width: 750px;
            margin: 80px auto;
            background: #FFFFFF;
            box-shadow: 1px 2px 3px 0px rgba(0,0,0,0.10);
            border-radius: 6px;

            display: flex;
            flex-direction: column;
        }

        .title {
            height: 60px;
            border-bottom: 1px solid #E1E8EE;
            padding: 20px 30px;
            color: #5E6977;
            font-size: 18px;
            font-weight: 400;
        }

        .basket-price {
            border-bottom: 1px solid #E1E8EE;
            font-size: 14px;
            color: #43484D;
            font-weight: 400;
            width: 100%;
            margin-top: 10px;
        }
        .basket-price p {
            padding: 0px 10px;
            text-align: right;
            margin-right: 10px;
        }

        .item {
            padding: 20px 30px;
            height: 100px;
            display: flex;
            border-bottom:  1px solid #E1E8EE;
        }

        .is-active {
            animation-name: animate;
            animation-duration: .8s;
            animation-iteration-count: 1;
            animation-timing-function: steps(28);
            animation-fill-mode: forwards;
        }

        @keyframes animate {
            0%   { background-position: left;  }
            50%  { background-position: right; }
            100% { background-position: right; }
        }

        /* Product Description */
        .description {
            padding-top: 10px;
            width: 250px;
        }

        .description span {
            display: block;
            font-size: 14px;
            color: #43484D;
            font-weight: 400;
        }

        .description span:first-child {
            margin-bottom: 5px;
        }
        .description span:last-child {
            font-weight: 300;
            margin-top: 8px;
            color: #86939E;
        }

        /* Product Quantity */
        .quantity {
            padding-top: 20px;
            margin-right: 60px;
        }
        .quantity input {
            -webkit-appearance: none;
            border: none;
            text-align: center;
            width: 32px;
            font-size: 16px;
            color: #43484D;
            font-weight: 300;
        }
        .quantity form {
            display: inline;
        }

        button[class*=btn-qty] {
            width: 30px;
            height: 30px;
            background-color: #E1E8EE;
            border-radius: 6px;
            border: none;
            cursor: pointer;
        }
        .remove-btn-qty {
            width: 80px !important;
        }
        button:focus,
        input:focus {
            outline:0;
        }

        /* Total Price */
        .total-price {
            width: 83px;
            padding-top: 27px;
            text-align: center;
            font-size: 16px;
            color: #43484D;
            font-weight: 300;
        }
        .total-price-discount {
            width: 140px;
            text-align: center;
            font-size: 16px;
            color: #43484D;
            font-weight: 300;
        }

        .remove-button {
            padding-top: 24px;
            margin-left: 20px;
            text-align: center;
            font-size: 16px;
            color: #43484D;
            font-weight: 300;
        }

        /* Responsive */
        @media (max-width: 800px) {
            .shopping-cart {
                width: 100%;
                height: auto;
                overflow: hidden;
            }
            .item {
                height: auto;
                flex-wrap: wrap;
                justify-content: center;
            }
            .image img {
                width: 50%;
            }
            .image,
            .quantity,
            .description {
                width: 100%;
                text-align: center;
                margin: 6px 0;
            }
            .buttons {
                margin-right: 10px;
            }
        }
    </style>
</head>
<body>

<div class="shopping-cart">
    <a href="{{ route('products') }}" class="ml-2 mt-2">< Back to products</a>
    <!-- Title -->
    <div class="title">
        Order Checkout <small class="float-right">ref {{ order.getUuid() }}</small>
    </div>
    {% for item in order.items %}
        <div class="item">
            <div class="description">
                <span>{{ item.product.name }}</span>
                <span>{{ item.product.description|truncate(50) }}</span>
            </div>
            <div class="quantity">
                {{ item.quantity }} x {{item.adjusted_unit_price|price}}
            </div>

                {% if item.original_total_price != item.adjusted_total_price %}
                    <div class="total-price-discount">
                        <span style="text-decoration: line-through;">{{ item.original_total_price|price }}</span>
                        <div class="discount">
                            <div class="price">Discounted {{ item.adjusted_total_price|price}}</div>
                        </div>
                    </div>
                    {% else %}
                        <div class="total-price">{{ item.original_total_price|price }}</div>
                {% endif %}

        </div>
    {% endfor %}

    <div class="basket-price">
        <p>Sub Total: {{ order.getSubTotalPrice()|price }}</p>
        {% if order.getDiscountPrice() %}<p>Discount: {{ order.getDiscountPrice()|price }}</p>{% endif %}
        <p>VAT: {{ order.getAdjustedVATCharge()|price }}</p>
        <p>Total: {{ order.getAdjustedPrice()|price }}</p>
    </div>

    <div class="actions m-2">
    <form class="p-4 " id="payment-form" method="POST" action="{{ route('order-pay', [order.getUuid()]) }}">
        <input type="hidden" name="_token" value="{{ csrf_token() }}" />

        <div id="card-element" class="m-3">
            <!-- a Stripe Element will be inserted here. -->
        </div>

        <button type="submit" class="btn btn-success float-right">Pay {{ order.getAdjustedPrice()|price }}</button>

            <form method="POST" action="{{ route('basket-clear') }}" class="float-left">
                <input type="hidden" name="_token" value="{{ csrf_token() }}" />
                <button type="submit" class="btn btn-danger">Cancel Order</button>
            </form>

            <div class="clearfix"></div>

        <div class="mt-4" id="card-errors">
            <div class="{{ error ? 'alert alert-danger' : '' }}" role="alert">{{ error }}</div>
        </div>
    </form>
    </div>
</div>


<script>
    // Create a Stripe client
    var stripe = Stripe('{{ publishable_key }}');

    // Create an instance of Elements
    var elements = stripe.elements();

    // Create an instance of the card Element
    var card = elements.create('card');

    // Add an instance of the card Element into the `card-element` <div>
    card.mount('#card-element');

    card.addEventListener('change', function(event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    // Create a token or display an error when the form is submitted.
    var form = document.getElementById('payment-form');
    form.addEventListener('submit', function(event) {
        event.preventDefault();

        stripe.createToken(card).then(function(result) {
            if (result.error) {
                // Inform the user if there was an error
                var errorElement = document.getElementById('card-errors');
                errorElement.htmlContent = '<div class="alert alert-danger">'+result.error.message+'</div>';
            } else {
                // Send the token to your server
                stripeTokenHandler(result.token);
            }
        });
    });

    function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
    }
</script>
</body>
</html>